parameters:
  configuration: ''
  testServer: ''

steps:
- task: UseDotNet@2
  displayName: 'Install .NET SDK'
  inputs:
    useGlobalJson: true

- script: npm install -g azure-functions-core-tools
  displayName: 'Install Azure Functions Core Tools'

- script: npm install -g azurite
  displayName: 'Install Azurite Local Storage Emulator'

- task: DockerInstaller@0
  displayName: Docker Installer
  inputs:
    dockerVersion: 17.09.0-ce
    releaseType: stable
  condition: and(succeeded(), eq(variables['Agent.OS'], 'linux'))

- script: docker pull mcr.microsoft.com/mssql/server:2019-latest
  displayName: Pull MSSQL Docker Image
  condition: and(succeeded(), eq(variables['Agent.OS'], 'linux'))

- bash: echo "##vso[task.setvariable variable=serverPassword]Test-$(Build.BuildNumber)-$(Get-Date -format yyyyMMdd-Hmmss)"
  displayName: Generate password for test server
  condition: and(succeeded(), eq(variables['Agent.OS'], 'linux'))

- script: 'docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=$(serverPassword)" -e "MSSQL_PID=Express"
   -p 1433:1433 --name sql1 -h sql1
   -d mcr.microsoft.com/mssql/server:2019-latest'
  displayName: Start Server in Docker Container
  condition: and(succeeded(), eq(variables['Agent.OS'], 'linux'))

- task: DotNetCoreCLI@2
  displayName: 'Run BenchmarkDotNet'
  env:
    TEST_SERVER: '$(testServer)'
    NODE_MODULES_PATH: '$(nodeModulesPath)'
    AZUREFUNCTIONS_SQLBINDINGS_TELEMETRY_OPTOUT: '1'
  inputs:
    command: run
    arguments: '-c ${{ parameters.configuration }}'
  condition: and(succeeded(), ne(variables['Agent.OS'], 'linux'))

- task: DotNetCoreCLI@2
  displayName: 'Run BenchmarkDotNet on Linux'
  env:
    SA_PASSWORD: '$(serverPassword)'
    AZUREFUNCTIONS_SQLBINDINGS_TELEMETRY_OPTOUT: '1'
  inputs:
    command: run
    arguments: '-c ${{ parameters.configuration }}'
  condition: and(succeeded(), eq(variables['Agent.OS'], 'linux'))

- script: |
    docker stop sql1
    docker rm sql1
  displayName: 'Stop and Remove SQL Server Image'
  condition: and(succeeded(), eq(variables['Agent.OS'], 'linux'))
