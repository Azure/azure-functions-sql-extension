parameters:
  configuration: ''
  solution: ''
  nugetVersion: ''
  testFilter: ''

steps:
- task: UseDotNet@2
  displayName: 'Install .NET Core SDK 5.0.x for Running Tests'
  inputs:
    version: '5.0.x'

- task: UseDotNet@2
  displayName: 'Install .NET Core 3.1 SDK for Build'
  inputs:
    version: '3.1.x'

- script: npm install -g azure-functions-core-tools
  displayName: 'Install Azure Functions Core Tools'

- script: npm install -g azurite
  displayName: 'Install Azurite Local Storage Emulator'

- task: DockerInstaller@0
  displayName: Docker Installer
  inputs:
    dockerVersion: 17.09.0-ce
    releaseType: stable

- script: docker pull mcr.microsoft.com/mssql/server:2019-latest
  displayName: Pull MSSQL Docker Image

- bash: echo "##vso[task.setvariable variable=serverPassword]Test-$(Build.BuildNumber)-$(Get-Date -format yyyyMMdd-Hmmss)"
  displayName: Generate password for test server

- script: 'docker run -e "ACCEPT_EULA=Y" -e "SA_PASSWORD=$(serverPassword)" -e "MSSQL_PID=Express"
   -p 1433:1433 --name sql1 -h sql1
   -d mcr.microsoft.com/mssql/server:2019-latest'
  displayName: Start Server in Docker Container

- task: DotNetCoreCLI@2
  displayName: '.NET Restore'
  inputs:
    command: restore
    projects: '${{ parameters.solution }}'

  # Don't generate package so we can sign it before packaging
- task: DotNetCoreCLI@2
  displayName: '.NET Build'
  inputs:
    command: build
    projects: '${{ parameters.solution }}'
    arguments: '--configuration ${{ parameters.configuration }} -p:GeneratePackageOnBuild=false'

- task: UseDotNet@2
  displayName: 'Install .NET Core SDK 2.1.x for CodeSign'
  inputs:
    version: '2.1.x'

- task: EsrpCodeSigning@1
  displayName: 'ESRP CodeSigning - Binaries'
  inputs:
    ConnectedServiceName: 'Code Signing'
    FolderPath: '$(Build.SourcesDirectory)/src/bin/${{ parameters.configuration }}'
    Pattern: 'Microsoft.Azure.WebJobs.Extensions.Sql.dll'
    signConfigType: inlineSignParams
    inlineOperation: |
     [
       {
         "keyCode": "CP-230012",
         "operationSetCode": "SigntoolSign",
         "parameters": [
         {
           "parameterName": "OpusName",
           "parameterValue": "Azure Functions SQL Extension"
         },
         {
           "parameterName": "OpusInfo",
           "parameterValue": "https://github.com/Azure/azure-functions-sql-extension"
         },
         {
           "parameterName": "PageHash",
           "parameterValue": "/NPH"
         },
         {
           "parameterName": "FileDigest",
           "parameterValue": "/fd sha256"
         },
         {
           "parameterName": "TimeStamp",
           "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
         }
         ],
         "toolName": "signtool.exe",
         "toolVersion": "6.2.9304.0"
       },
       {
         "keyCode": "CP-230012",
         "operationSetCode": "SigntoolVerify",
         "parameters": [
         {
           "parameterName": "VerifyAll",
           "parameterValue": "/all"
         }
             ],
         "toolName": "signtool.exe",
         "toolVersion": "6.2.9304.0"
       }
     ]
    SessionTimeout: 600
    MaxConcurrency: 5

  # Extra parameter GeneratePackageOnBuild=false is needed for issue https://github.com/dotnet/sdk/pull/3473#issuecomment-516612070
- task: DotNetCoreCLI@2
  displayName: '.NET Pack Nuget'
  inputs:
    command: custom
    custom: pack
    projects: '${{ parameters.solution }}'
    arguments: '--configuration ${{ parameters.configuration }} --output $(Build.ArtifactStagingDirectory) --no-build -p:PackageVersion="${{ parameters.nugetVersion }}" -p:GeneratePackageOnBuild=false'

- task: DotNetCoreCLI@2
  displayName: '.NET Test'
  env:
    SA_PASSWORD: '$(serverPassword)'
  inputs:
    command: test
    projects: '${{ parameters.solution }}'
    arguments: '--configuration ${{ parameters.configuration }} ${{ parameters.testFilter }} --collect "Code Coverage" -s $(Build.SourcesDirectory)/test/coverage.runsettings'

- script: |
    docker stop sql1
    docker rm sql1
  displayName: 'Stop and Remove SQL Server Image'