// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.

using Microsoft.Azure.Functions.Worker.Http;
using Microsoft.Azure.WebJobs.Extensions.Sql.SamplesOutOfProc.Common;
using Microsoft.Azure.Functions.Worker.Extension.Sql;
using Microsoft.Azure.Functions.Worker;
using System.Web;

namespace Microsoft.Azure.WebJobs.Extensions.Sql.SamplesOutOfProc.OutputBindingSamples
{

    public static class AddProductWithIdentityColumnIncluded
    {
        /// <summary>
        /// This shows an example of a SQL Output binding where the target table has a primary key
        /// which is an identity column and the identity column is included in the output object. In
        /// this case the identity column is used to match the rows and all non-identity columns are
        /// updated if a match is found. Otherwise a new row is inserted (with the identity column being
        /// ignored since that will be generated by the engine).
        /// </summary>
        /// <param name="req">The original request that triggered the function</param>
        /// <returns>The new product object that will be upserted</returns>
        [Function(nameof(AddProductWithIdentityColumnIncluded))]
        [SqlOutput("dbo.ProductsWithIdentity", ConnectionStringSetting = "SqlConnectionString")]
        public static ProductWithOptionalId Run(
            [HttpTrigger(AuthorizationLevel.Anonymous, "get", Route = "addproductwithidentitycolumnincluded")]
            HttpRequestData req)
        {
            var product = new ProductWithOptionalId
            {
                Name = HttpUtility.ParseQueryString(req.Url.Query)["name"],
                ProductID = string.IsNullOrEmpty(HttpUtility.ParseQueryString(req.Url.Query)["productId"]) ? null : int.Parse(HttpUtility.ParseQueryString(req.Url.Query)["productId"], null),
                Cost = int.Parse(HttpUtility.ParseQueryString(req.Url.Query)["cost"], null)
            };
            return product;
        }
    }
}
