# ASP.NET Core (.NET Framework)

# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- dev

pool:
  vmImage: 'windows-latest'

variables:
  Solution: '**/*.sln'
  BuildPlatform: 'Any CPU'
  BuildConfiguration: 'Release'

# .NET Standard 2.1 for build
steps:
- task: UseDotNet@2
  displayName: 'Install .NET Core SDK 3.1.x for Build'
  inputs:
    version: '3.1.x'

- task: DotNetCoreCLI@2
  displayName: '.NET Restore'
  inputs:
    command: restore
    projects: '$(Solution)'
    verbosityRestore: Quiet

# Build outputs directly into staging directory
- task: DotNetCoreCLI@2
  displayName: '.NET Build'
  inputs:
    command: build
    projects: '$(Solution)'
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'

- task: DotNetCoreCLI@2
  displayName: '.NET Test'
  inputs:
    command: test
    projects: '$(Solution)'
    arguments: '--configuration $(BuildConfiguration)'

# .NET Core 2.1 for CodeSign
- task: UseDotNet@2
  displayName: 'Install .NET Core SDK 2.1.x for CodeSign'
  inputs:
    version: '2.1.x'

- task: EsrpCodeSigning@1
  displayName: 'Nuget Code Signing'
  inputs:
    ConnectedServiceName: 'Code Signing'
    FolderPath: '$(Build.ArtifactStagingDirectory)'
    Pattern: '*.nupkg'
    signConfigType: 'inlineSignParams'
    inlineOperation: |
      [ 
          {
              "keyCode": "CP-401405",
              "operationSetCode": "NuGetSign",
              "parameters": [ ],
              "toolName": "sign",
              "toolVersion": "1.0"
          },
          {
              "keyCode": "CP-401405",
              "operationSetCode": "NuGetVerify",
              "parameters": [ ],
              "toolName": "sign",
              "toolVersion": "1.0"
          }
      ]
    SessionTimeout: '60'
    MaxConcurrency: '50'
    MaxRetryAttempts: '5'

- task: PublishPipelineArtifact@1
  displayName: 'Publish Pipeline Artifact'
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'drop'
